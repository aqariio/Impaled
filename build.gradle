plugins {
id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
	id 'com.matthewprenger.cursegradle' version '1.4.0'
	id 'org.ajoberstar.grgit' version '3.1.1'
	id 'com.github.breadmoirai.github-release' version '2.2.12'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17
// Adds a few utility methods like getProjectProperty
apply from: 'https://raw.githubusercontent.com/NerdHubMC/Gradle-Scripts/master/scripts/utilities.gradle'
apply from: 'https://raw.githubusercontent.com/NerdHubMC/Gradle-Scripts/master/scripts/fabric/publish/changelog.gradle'

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven {
		url "https://maven.ladysnake.org/releases"
		content {
			includeGroup("org.ladysnake")
			includeGroupByRegex("dev\\.onyxstudios\\..*")
		}
	}
	maven {
		url "https://maven.ladysnake.org/snapshots"
		content {
			includeGroup("org.ladysnake")
			includeGroup("xyz.amymialee")
		}
	}
	// MixinExtras
	maven {
		url "https://jitpack.io"
		content {
			includeGroupByRegex "com\\.github\\..*"
		}
	}
	maven {
		name "modrinth"
		url "https://api.modrinth.com/maven"
		content {
			includeGroup('maven.modrinth')
		}
	}
	// modmenu
	maven {
		name = 'TerraformersMC'
		url = 'https://maven.terraformersmc.com/'
	}
	// MialeeMisc
	maven { url "https://maven.willbl.dev/releases" }
	// bookshelf
	maven { url 'https://maven.blamejared.com' }
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation(libs.mialeemisc) {
		exclude group: "dev.emi"
	}
	include (libs.mialeemisc)

	modRuntimeOnly(libs.modmenu) {
		exclude group: "net.fabricmc"
	}
//	modRuntimeOnly("com.github.Virtuoel:Pehkui:3.7.12") {
//		exclude group: "net.fabricmc.fabric-api"
//	}
//	modRuntimeOnly("net.darkhax.bookshelf:Bookshelf-Fabric-1.19.2:16.3.20") {
//		exclude group: "net.fabricmc"
//	}
//	modRuntimeOnly("maven.modrinth:enchantment-descriptions:13.0.14") {
//		exclude group: "net.fabricmc"
//	}
	modCompileOnly(libs.enchancement)
	modCompileOnly(libs.cca.base)
	modCompileOnly(libs.midnightLib)
	modRuntimeOnly(libs.bundles.enchancement) {
		exclude group: "net.fabricmc.fabric-api"
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}


apply from: 'release.gradle'